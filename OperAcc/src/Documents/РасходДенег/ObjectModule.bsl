
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Регистр Взаиморасчеты Приход
	
	Движения.Взаиморасчеты.Записывать = Истина;
	Движения.Взаиморасчеты.Записать(); 
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Взаиморасчеты");
	ЭлементБлокировки.УстановитьЗначение("Поставщик", Поставщик);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	ОсталосьРазнести = СуммаПоДокументу;                                 
	
	
	// Чтение задолжностей по соглашениям  на момент времени создания документа для выбранного поставщика.
	// Задолженность по соглашениям в регистре накопления хранится в виде отрицательного значения или нуля. 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыОстатки.Соглашение КАК Соглашение,
		|	- ЕСТЬNULL(ВзаиморасчетыОстатки.СуммаВРубОстаток, 0) КАК СуммаВРубОстаток,
		|	- ЕСТЬNULL(ВзаиморасчетыОстатки.СуммаВUSDОстаток, 0) КАК СуммаВUSDОстаток,
		|	- ЕСТЬNULL(ВзаиморасчетыОстатки.СуммаВEURОстаток, 0) КАК СуммаВEURОстаток
		|ИЗ
		|	РегистрНакопления.Взаиморасчеты.Остатки(
		|			&МоментВремени,
		|			Поставщик = &Поставщик
		|				И Соглашение <> ЗНАЧЕНИЕ(Справочник.Соглашения.ПустаяСсылка)) КАК ВзаиморасчетыОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВзаиморасчетыОстатки.Соглашение.ДатаОплаты";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Если ЗначениеЗаполнено(Соглашение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Соглашение <> ЗНАЧЕНИЕ(Справочник.Соглашения.ПустаяСсылка)", "Соглашение = &Соглашение");
		Запрос.УстановитьПараметр("Соглашение", Соглашение);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	// Регистр Взаиморасчеты Приход - Погашение задолженостей по соглашениям.
	Пока ОсталосьРазнести > 0 И Выборка.Следующий() Цикл
		
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Поставщик = Поставщик;
		Движение.Соглашение = Выборка.Соглашение;  
		
		Движение.СуммаВРуб = Мин(Выборка.СуммаВРубОстаток, ОсталосьРазнести);
		
		Если Движение.СуммаВРуб = Выборка.СуммаВРубОстаток Тогда
			
			//Сведение в ноль
			Движение.СуммаВUSD = Выборка.СуммаВUSDОстаток;
			Движение.СуммаВEUR = Выборка.СуммаВEURОстаток;
			
		Иначе
			
			Движение.СуммаВUSD = Движение.СуммаВРуб / КурсUSD;
			Движение.СуммаВEUR = Движение.СуммаВРуб / КурсEUR;
			
		КонецЕсли;  
		
		ОсталосьРазнести = ОсталосьРазнести - Движение.СуммаВРуб;
		
		
	КонецЦикла;
	
	Если ОсталосьРазнести > 0 Тогда 
		
		// Регистр Взаиморасчеты Приход - Начисление Аванса
		
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Поставщик = Поставщик;
		Движение.Соглашение = Справочники.Соглашения.ПустаяСсылка();
		Движение.СуммаВРуб = ОсталосьРазнести;
		Движение.СуммаВUSD = ОсталосьРазнести / КурсUSD;
		Движение.СуммаВEUR = ОсталосьРазнести / КурсEUR;   
		
	КонецЕсли;
	
	
КонецПроцедуры
